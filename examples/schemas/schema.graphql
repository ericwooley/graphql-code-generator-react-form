type User {
  id: Int!
  name: String!
  password: String
  email: String!
  friends: [User]!
}

input UserInput {
  id: Int
  name: String!
  email: String!
  password: String
  mother: UserInput
  father: UserInput
  friends: [UserInput]!
  followers: [UserInput]
  role: UserRole!
}

type QueryRoot {
  allUsers: [User]!
  userById(id: Int!): User

  # Generates a new answer for the guessing game
  answer: [Int!]!
}
type MutationRoot {
  addUsers(users: [UserInput]!): [User]
  addUser(user: UserInput!): User
}

type SubscriptionRoot {
  newUser: User
}

schema {
  query: QueryRoot
  subscription: SubscriptionRoot
  mutation: MutationRoot
}

enum UserRole {
  ADMIN
  USER
  SCRUB
}
